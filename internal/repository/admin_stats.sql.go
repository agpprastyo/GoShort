// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: admin_stats.sql

package repository

import (
	"context"
)

const countActiveLinks = `-- name: CountActiveLinks :one
SELECT COUNT(*) FROM short_links WHERE is_active = TRUE
`

func (q *Queries) CountActiveLinks(ctx context.Context) (int64, error) {
	row := q.db.QueryRow(ctx, countActiveLinks)
	var count int64
	err := row.Scan(&count)
	return count, err
}

const countInactiveLinks = `-- name: CountInactiveLinks :one
SELECT COUNT(*) FROM short_links WHERE is_active = FALSE
`

func (q *Queries) CountInactiveLinks(ctx context.Context) (int64, error) {
	row := q.db.QueryRow(ctx, countInactiveLinks)
	var count int64
	err := row.Scan(&count)
	return count, err
}

const countLinks = `-- name: CountLinks :one
SELECT COUNT(*) FROM short_links
`

func (q *Queries) CountLinks(ctx context.Context) (int64, error) {
	row := q.db.QueryRow(ctx, countLinks)
	var count int64
	err := row.Scan(&count)
	return count, err
}

const countUsers = `-- name: CountUsers :one
SELECT COUNT(*) FROM users
`

func (q *Queries) CountUsers(ctx context.Context) (int64, error) {
	row := q.db.QueryRow(ctx, countUsers)
	var count int64
	err := row.Scan(&count)
	return count, err
}
