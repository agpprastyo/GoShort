// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package repository

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	CheckShortCodeExists(ctx context.Context, shortCode string) (bool, error)
	CreateShortLink(ctx context.Context, arg CreateShortLinkParams) (ShortLink, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	DeactivateShortLink(ctx context.Context, id uuid.UUID) (ShortLink, error)
	DecrementClickLimit(ctx context.Context, id uuid.UUID) (ShortLink, error)
	DeleteUser(ctx context.Context, id uuid.UUID) error
	DeleteUserShortLink(ctx context.Context, id uuid.UUID) error
	GetActiveShortLinkByCode(ctx context.Context, shortCode string) (ShortLink, error)
	GetShortLink(ctx context.Context, id uuid.UUID) (ShortLink, error)
	GetShortLinkByCode(ctx context.Context, shortCode string) (ShortLink, error)
	GetUser(ctx context.Context, id uuid.UUID) (User, error)
	GetUserByEmail(ctx context.Context, email string) (User, error)
	GetUserByUsername(ctx context.Context, username string) (User, error)
	ListShortLinks(ctx context.Context, arg ListShortLinksParams) ([]ShortLink, error)
	ListUserShortLinks(ctx context.Context, arg ListUserShortLinksParams) ([]ShortLink, error)
	ListUsers(ctx context.Context, arg ListUsersParams) ([]User, error)
	ListUsersByRole(ctx context.Context, arg ListUsersByRoleParams) ([]User, error)
	ToggleShortLinkStatus(ctx context.Context, id uuid.UUID) (ShortLink, error)
	UpdateShortLink(ctx context.Context, arg UpdateShortLinkParams) (ShortLink, error)
	UpdateUser(ctx context.Context, arg UpdateUserParams) (User, error)
}

var _ Querier = (*Queries)(nil)
